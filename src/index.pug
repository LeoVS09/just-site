doctype html
html
    head
        meta(http-equiv="Content-type",content="text/html,charset=utf-8")
        meta(http-equiv="X-UA-Compatible",content="IE=edge")
        meta(name="viewport",content="width=device-width,initial-scale=1")
        link(href="favicon.ico" rel="shortcut icon" type="image/x-icon")
        title Goncharov Vladislav
        link(href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet")
        <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
        <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
        <!--[if lt IE 9]>
        script(src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js")
        script(src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js")
        <![endif]-->
    body
        //TODO: Progress reading indicator
        nav
            - var paragraphs =  ['about','skills','works','contact'];
            each word in paragraphs
                div(class="nav-button" id=word)
                    p=(word.toUpperCase())
        div#root
            header
                //image ratio must be 16/9
                div.dynamic-parallax
                    div.dynamic-parallax--content
                        h1 HELLO
                        h1 I'M
                            span  GONCHAROV VLADISLAV
                        h2 Frontend & Backend Developer
            main
                -
                    var tags = paragraphs;
                    var names = [
                        "Who am I",
                        "What I can",
                        "What I did",
                        "Get in touch"
                    ];
                    var texts = [
                        "I'm a web/app developer based on Saint-Petersburg, Russia. I have a passion for programming and I like task that challenging me.",
                        "I'm a developer, so I know how to resolve your problem using the latest technologies available.",
                        "You can see code some of my projects.",
                        "I’m currently available for work."
                    ]
                    var cards = [
                        [],
                        [
                            "Android app developing",
                            "Servers on Java Spring + Hibernate",
                            "Building architecture MySQL or NoSQL database",
                            "SPA on ReactJS and Redux",
                            "Desktop program on C++"
                        ],
                        [
                            "Java sever for mobile multiplayer game",
                            "Python parser",
                            "Quantum tic-tac-toe SPA",
                            "Open source library for redux"
                        ],
                        [
                            0,
                            0,
                            "LeoVS010@gmail.com"
                        ]
                    ];
                    var links = [
                        [],
                        [],
                        [
                            "https://github.com/LeoVS09/SN-Munchkin-server",
                            "https://github.com/LeoVS09/learning-parser",
                            "https://leovs09.github.io/Tic-tac-toe/",
                            "https://github.com/LeoVS09/Captain-redux"
                        ],
                        [
                            "https:/github.com/LeoVS09",
                            "https://vk.com/id234222638",
                            "mailto:LeoVS010@gmail.com"
                        ]
                    ];
                    var icons = [
                        [],
                        [
                            require("./images/icon-android.png"),
                            require("./images/icon-spring.png"),
                            require('./images/icon-mysql.svg'),
                            require("./images/icon-react.png"),
                            require('./images/icon-c.png')
                        ],
                        [
                            require("./images/icon-java.png"),
                            require("./images/icon-python.png"),
                            require("./images/icon-quantum.png"),
                            require("./images/icon-redux.png")
                        ],
                        [
                            require("./images/icon-github.png"),
                            require("./images/icon-vk.png")

                        ]
                    ]
                    var images = [0,1,1,1];
                    var separators = [1]
                    var blocks = [];
                    for(var i = 0; i < tags.length; i++){
                        blocks.push({
                            tag: tags[i],
                            name: names[i],
                            text: texts[i],
                            cards: cards[i].map(
                                (text,k) => ({
                                    text,
                                    icon: icons[i][k],
                                    link: links[i][k]
                                })
                            ),
                            image: images[i],
                            separator: separators[i]
                        });
                    }

                mixin mCard(card)
                    div.card
                        if card.icon
                            img(src=card.icon)
                        if card.text
                            p=card.text

                mixin block(data)
                    div(class=(data.tag + " paragraph"))
                        if data.image
                            div(class=(data.tag + "-image"))
                                h1= data.name
                        else
                            h1= data.name
                        if data.separator
                            div.container-separator
                                div.separator  ⌘
                        if data.text
                            p.text= data.text
                        if data.cards.length
                            div.cards
                                each card in data.cards
                                    if card.link
                                        a(href=card.link)
                                            +mCard(card)
                                    else
                                        +mCard(card)
                each data in blocks
                    +block(data)
            footer.footer
                p © 2017 Goncharov Vladislav. All rights reserved.
                //TODO: reference to repository of site
